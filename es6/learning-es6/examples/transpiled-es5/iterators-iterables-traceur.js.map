{"version":3,"sources":["../es6/iterators-iterables.js"],"names":[],"mappings":"AAAA,AAAC,SAAS,AAAD;AACR,aAAW,CAAC;;;;AAEZ,SAAS,WAAS,CAAE,GAAE,CAAG;AACxB,SAAO,CAAA,GAAE,GAAK,CAAA,MAAO,IAAE,CAAE,MAAK,SAAS,CAAC,CAAA,GAAM,WAAS,CAAC;EACzD;AAAA,AAEA,SAAS,KAAG,CAAE,QAAO,CAAG,CAAA,KAAI;;AAExB,AAAI,MAAA,CAAA,QAAO,EAAI,CAAA,QAAO,CAAE,MAAK,SAAS,CAAC,AAAC,EAAC,CAAC;AAG1C;WACI,UAAK,AAAD,CAAG;AAGH,WAAI,KAAI,EAAI,EAAA,CAAG;AAGX,cAAI,EAAE,CAAC;AAMP,eAAO,CAAA,QAAO,KAAK,AAAC,EAAC,CAAC;QAC1B,KACK;AAED,eAAO,EAAC,IAAG,CAAG,KAAG,CAAC,CAAC;QACvB;AAAA,MACJ;;;;kCACC,CAAA,MAAK,SAAS;WAAf,UAAkB,AAAD,CAAG;AAEhB,aAAO,KAAG,CAAC;MACf;;;;aACH;EACL;AAEA,AAAI,IAAA,CAAA,MAAK,EAAI,EAAC,OAAM,CAAG,OAAK,CAAG,UAAQ,CAAC,CAAC;AACzC,AAAI,IAAA,CAAA,eAAc,EAAI,CAAA,MAAK,CAAE,MAAK,SAAS,CAAC,AAAC,EAAC,CAAC;AAG/C,QAAM,IAAI,AAAC,CAAC,eAAc,KAAK,AAAC,EAAC,CAAC,CAAC;AAGnC,QAAM,IAAI,AAAC,CAAC,eAAc,KAAK,AAAC,EAAC,CAAC,CAAC;AAGnC,QAAM,IAAI,AAAC,CAAC,eAAc,KAAK,AAAC,EAAC,CAAC,CAAC;AAGnC,QAAM,IAAI,AAAC,CAAC,eAAc,KAAK,AAAC,EAAC,CAAC,CAAC;AAGnC,QAAM,IAAI,AAAC,CAAC,UAAS,AAAC,CAAC,MAAK,CAAC,CAAC,CAAC;AAG/B,QAAM,IAAI,AAAC,CAAC,UAAS,AAAC,CAAC,KAAI,CAAC,CAAC,CAAC;AAG9B,QAAM,IAAI,AAAC,CAAC,UAAS,AAAC,CAAC,GAAI,IAAE,AAAC,EAAC,CAAC,CAAC,CAAC;IAE5B,WAAS,EA/DhB,CAAA,SAAS,AAAD;;AA+DP,WAAM,WAAS,CACC,AAAD,CAAG;AACV,SAAG,KAAK,EAAI,EAAA,CAAC;IACjB;AAcJ,AA9ES,SAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,oDAiExC,CAAA,MAAK,SAAS;WAAf,UAAkB,AAAD,CAAG;AAChB,aAAO,KAAG,CAAC;MACf;;;;;WACA,UAAK,AAAD,CAAG;AACH,WAAG,KAAK,EAAE,CAAC;AAEX,WAAI,IAAG,KAAK,IAAM,EAAA;AACd,eAAO,EAAC,KAAI,CAAG,MAAI,CAAC,CAAC;WACpB,KAAI,IAAG,KAAK,GAAK,EAAA;AAClB,eAAO,EAAC,KAAI,CAAG,WAAS,CAAC,CAAC;AAAA,AAE9B,aAAO,EAAC,IAAG,CAAG,KAAG,CAAC,CAAC;MACvB;;;;iBA5E2D,CAAC;EACzD,AAAC,EAAC;AA8ET,AAAI,IAAA,CAAA,IAAG,EAAI,IAAI,WAAS,AAAC,EAAC,CAAC;AAG3B,QAAM,IAAI,AAAC,CAAC,IAAG,KAAK,AAAC,EAAC,CAAC,CAAC;AAGxB,QAAM,IAAI,AAAC,CAAC,IAAG,KAAK,AAAC,EAAC,CAAC,CAAC;AAGxB,QAAM,IAAI,AAAC,CAAC,IAAG,KAAK,AAAC,EAAC,CAAC,CAAC;AAGxB,QAAM,IAAI,AAAC,CAAC,IAAG,KAAK,AAAC,EAAC,CAAC,CAAC;AAExB,AAAI,IAAA,CAAA,OAAM,EAAI,IAAI,WAAS,AAAC,EAAC,CAAC;AA/FvB,AAAI,IAAA,OAAoB,KAAG,CAAC;AAC5B,AAAI,IAAA,OAAoB,MAAI,CAAC;AAC7B,AAAI,IAAA,OAAoB,UAAQ,CAAC;AACjC,IAAI;AAHJ,QAAS,GAAA,OADjB,KAAK,EAAA,AAC4B;AAChB,aAAoB,CAAA,CAgGnB,OAAM,CAhG+B,CAAE,MAAK,SAAS,CAAC,AAAC,EAAC,CAC7D,EAAC,CAAC,MAAoB,CAAA,CAAC,MAAoB,CAAA,SAAqB,AAAC,EAAC,CAAC,KAAK,CAAC,CACzE,OAAoB,KAAG,CAAG;QA8F7B,KAAG;AAAc;AACtB,cAAM,IAAI,AAAC,CAAC,IAAG,CAAC,CAAC;MACrB;IA7FO;AAAA,EADA,CAAE,YAA0B;AAC1B,SAAoB,KAAG,CAAC;AACxB,cAAoC,CAAC;EACvC,CAAE,OAAQ;AACR,MAAI;AACF,SAAI,KAAiB,GAAK,CAAA,WAAuB,GAAK,KAAG,CAAG;AAC1D,kBAAwB,AAAC,EAAC,CAAC;MAC7B;AAAA,IACF,CAAE,OAAQ;AACR,cAAwB;AACtB,kBAAwB;MAC1B;AAAA,IACF;AAAA,EACF;AAAA,AAmFH,IAAA,CAAA,SAAQ,0CACP,CAAA,MAAK,SAAS;SAAf,UAAkB,AAAD;AACb,AAAI,QAAA,CAAA,QAAO,EAAI,EAAA;AAAG,gBAAM,EAAI,EAAA,CAAC;AAC7B,WAAO,EACH,IAAG,CAAH,UAAK,AAAD;;;;AACA,iBAAsB,EAAC,OAAM,CAAG,CAAA,QAAO,EAAI,QAAM,CAAC,CAAjD,SAAO,IA3GzB,OAAoB,CAAA,MAAkB,MAAK,SAAS,CAAC,AAAC,EAAC,CAAvD,CAAA,CAAC,OACO,CAAA,UAAqB,AAAC,EAAC,CAAC,KAAK,EAAI,KAAK,EAAA,CAAA,CAAI,YAAsB,EA0G5C,QAAM,EA3GlC,CAAA,CAAC,OACO,CAAA,UAAqB,AAAC,EAAC,CAAC,KAAK,EAAI,KAAK,EAAA,CAAA,CAAI,YAAsB,SA0GJ;AACnD,eAAO,EAAC,KAAI,CAAG,QAAM,CAAC,CAAC;QAC3B,CACJ,CAAA;IACJ;;;;UACJ,CAAA;AA/GO,AAAI,IAAA,QAAoB,KAAG,CAAC;AAC5B,AAAI,IAAA,QAAoB,MAAI,CAAC;AAC7B,AAAI,IAAA,QAAoB,UAAQ,CAAC;AACjC,IAAI;AAHJ,QAAS,GAAA,QADjB,KAAK,EAAA,AAC4B;AAChB,cAAoB,CAAA,CAiHjB,SAAQ,CAjH2B,CAAE,MAAK,SAAS,CAAC,AAAC,EAAC,CAC7D,EAAC,CAAC,OAAoB,CAAA,CAAC,OAAoB,CAAA,UAAqB,AAAC,EAAC,CAAC,KAAK,CAAC,CACzE,QAAoB,KAAG,CAAG;QA+G7B,OAAK;AAAgB;AAE1B,WAAI,MAAK,EAAI,KAAG;AACZ,eAAK;AAAA,AAET,cAAM,IAAI,AAAC,CAAC,MAAK,CAAC,CAAC;MACvB;IAlHO;AAAA,EADA,CAAE,aAA0B;AAC1B,UAAoB,KAAG,CAAC;AACxB,gBAAoC,CAAC;EACvC,CAAE,OAAQ;AACR,MAAI;AACF,SAAI,MAAiB,GAAK,CAAA,YAAuB,GAAK,KAAG,CAAG;AAC1D,mBAAwB,AAAC,EAAC,CAAC;MAC7B;AAAA,IACF,CAAE,OAAQ;AACR,eAAwB;AACtB,mBAAwB;MAC1B;AAAA,IACF;AAAA,EACF;AAAA,AAyGP,YAAiC,UAAQ;AAAlC,cAAQ,IA5HhB,OAAoB,CAAA,MAAkB,MAAK,SAAS,CAAC,AAAC,EAAC,CAAvD,CAAA,UAAqB,AAAC,EAAC,CAAvB,CAAA,CAAC,OACO,CAAA,UAAqB,AAAC,EAAC,CAAC,KAAK,EAAI,KAAK,EAAA,CAAA,CAAI,YAAsB;AA2HnD,cAAQ,IA5H7B,UAAqB,AAAC,EAAC,CAAvB,CAAA,CAAC,OACO,CAAA,UAAqB,AAAC,EAAC,CAAC,KAAK,EAAI,KAAK,EAAA,CAAA,CAAI,YAAsB,EA2H7B;AAG1C,QAAM,IAAI,AAAC,CAAC,SAAQ,CAAG,UAAQ,CAAC,CAAC;AAGjC,QAAM,IAAI,AAAC,CAAC,KAAI,KAAK,AAAC,CAAC,IAAG,AAAC,CAAC,SAAQ,CAAG,EAAA,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,AAAE,EAAC,CAAC","file":"/Users/benmvp/github/benmvp/learning-es6/examples/transpiled-es5/iterators-iterables-traceur.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tfunction isIterable(obj) {\n\t\treturn obj && typeof obj[Symbol.iterator] === 'function';\n\t}\n\n\tfunction take(iterable, count) {\n\t    // get default `@@iterator` from original iterable\n\t    let iterator = iterable[Symbol.iterator]();\n\n\t    // return new (anonymous) iterable\n\t    return {\n\t        next() {\n\t            // implementing `next()` makes it an iterator\n\n\t            if (count > 0) {\n\t                // if there are items remaining, return the next\n\t                // one from the iterable\n\t                count--;\n\n\n\t\t\t\t\t// return the value from original iterable's iterator.\n\t\t\t\t\t// if there are less values in it than `count`, this\n\t\t\t\t\t// will just return `{done: true}` early!\n\t                return iterator.next();\n\t            }\n\t            else {\n\t                // otherwise just say we're done\n\t                return {done: true};\n\t            }\n\t        },\n\t        [Symbol.iterator]() {\n\t            // implementing default `@@iterator` makes it an iterable\n\t            return this;\n\t        }\n\t    };\n\t}\n\n\tlet values = ['alpha', 'beta', 'charlie'];\n\tlet defaultIterator = values[Symbol.iterator]();\n\n\t// output: {value: 'alpha', done: false}\n\tconsole.log(defaultIterator.next());\n\n\t// output: {value: 'beta', done: false}\n\tconsole.log(defaultIterator.next());\n\n\t// output: {value: 'charlie', done: false}\n\tconsole.log(defaultIterator.next());\n\n\t// output: {value: undefined, done: true}\n\tconsole.log(defaultIterator.next());\n\n\t// output: true\n\tconsole.log(isIterable(values));\n\n\t// output: true\n\tconsole.log(isIterable('Ben'));\n\n\t// output: true\n\tconsole.log(isIterable(new Set()));\n\n\tclass MyIterator {\n\t    constructor() {\n\t        this.step = 0;\n\t    }\n\t    [Symbol.iterator]() {\n\t        return this;\n\t    }\n\t    next() {\n\t        this.step++;\n\n\t        if (this.step === 1)\n\t            return {value: 'Ben'};\n\t        else if (this.step == 2)\n\t            return {value: 'Ilegbodu'};\n\n\t        return {done: true};\n\t    }\n\t}\n\n\tlet iter = new MyIterator();\n\n\t// output: {value: 'Ben'}\n\tconsole.log(iter.next());\n\n\t// output: {value: 'Ilegbodu'}\n\tconsole.log(iter.next());\n\n\t// output: {done: true}\n\tconsole.log(iter.next());\n\n\t// output: {done: true}\n\tconsole.log(iter.next());\n\n\tlet myIter2 = new MyIterator();\n\n\tfor (let item of myIter2) {\n\t    console.log(item);\n\t}\n\n\tlet fibonacci = {\n\t    [Symbol.iterator]() {\n\t        let previous = 0, current = 1;\n\t        return {\n\t            next() {\n\t                [previous, current] = [current, previous + current];\n\t                return {value: current};\n\t            }\n\t        }\n\t    }\n\t}\n\n\t// iterables with `for-of` loop\n\tfor (var number of fibonacci) {\n\t    // stop after the number is greater than 1000\n\t    if (number > 1000)\n\t        break;\n\n\t    console.log(number);\n\t}\n\n\t// iterables w/ destructuring\n\tlet [, secondFib, , fourthFib] = fibonacci;\n\n\t// output: 2, 5\n\tconsole.log(secondFib, fourthFib);\n\n\t// output: [1, 2, 3, 5, 8, 13]\n\tconsole.log(Array.from(take(fibonacci, 6)));\n}) ();\n"]}