{"version":3,"sources":["../es6/enhanced-object-literals.js"],"names":[],"mappings":";;;;AAAA,CAAC,YAAW;AACX,aAAY,CAAC;;AAEb,UAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;;;AACnC,MAAI,QAAQ,GAAG,OAAO;MACrB,aAAa,GAAG,YAAY,CAAC;;AAE9B;;;;;AAKC,OAAI,EAAJ,IAAI;AACJ,QAAK,EAAL,KAAK;;AAEL,SAAM,EAAE,KAAK;;+CAIZ,MAAM,GAAG,IAAI,EAAG,IAAI,2DAIX,sBAAG;AACZ,OAAI,CAAC,KAAK,IAAI,IAAI,CAAC;GACnB,6CAIA,aAAa,EAAC,YAAG;AACjB,OAAI,CAAC,KAAK,IAAI,IAAI,CAAC;GACnB;AAIG,QAAK;;;;;SAAA,eAAG;AACX,YAAO,IAAI,CAAC,MAAM,CAAC;KACnB;;;;KAII,QAAQ;;;;;QAAC,aAAC,KAAK,EAAE;AACrB,QAAI,KAAK,GAAG,CAAC,EACZ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;;AAElC,QAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACpB;;;MACA;EACF;;AAED,KAAI,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;;;;;;;;;AAU1C,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEjB,IAAG,CAAC,UAAU,EAAE,CAAC;AACjB,IAAG,CAAC,UAAU,EAAE,CAAC;;;AAGjB,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;CACvB,CAAA,EAAI,CAAC","file":"enhanced-object-literals-babel.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tfunction getCar(make, model, value) {\n\t\tlet valueKey = 'value',\n\t\t\tappreciateKey = 'appreciate';\n\n\t\treturn {\n\t\t\t// with property value shorthand\n\t\t\t// syntax, you can omit the property\n\t\t\t// value if key matches variable\n\t\t\t// name\n\t\t\tmake,  // same as make: make\n\t\t\tmodel, // same as model: model\n\n\t\t\t_value: value,\n\n\t\t\t// computed property keys now work with\n\t\t\t// object literals\n\t\t\t['make' + make]: true,\n\n\t\t\t// Method definition shorthand syntax\n\t\t\t// omits `function` keyword & colon\n\t\t\tdepreciate() {\n\t\t\t\tthis.value -= 2500;\n\t\t\t},\n\n\t\t\t// computed property keys also work\n\t\t\t// withe method definition shorthand\n\t\t\t[appreciateKey]() {\n\t\t\t\tthis.value += 1000;\n\t\t\t},\n\t\t\n\t\t\t// ES5 property accessors still work\n\t\t\t// the same\n\t\t\tget value() {\n\t\t\t\treturn this._value;\n\t\t\t},\n\n\t\t\t// computed property keys also work\n\t\t\t// with property accessors\n\t\t\tset [valueKey](value) {\n\t\t\t\tif (value < 0)\n\t\t\t\t\tthrow new Error('invalid value');\n\n\t\t\t\tthis._value = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet car = getCar('Kia', 'Sorento', 40000);\n\n\t// output: {\n\t//     make: 'Kia',\n\t//     model:'Sorento',\n\t//     _value: 40000,\n\t//     makeKia: true,\n\t//     depreciate: function(),\n\t//     value: Getter\n\t// }\n\tconsole.log(car);\n\n\tcar.depreciate();\n\tcar.appreciate();\n\n\t// output: 38500\n\tconsole.log(car.value);\n}) ();\n"]}