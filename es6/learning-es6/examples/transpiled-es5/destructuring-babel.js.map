{"version":3,"sources":["../es6/destructuring.js"],"names":[],"mappings":"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","file":"destructuring-babel.js","sourcesContent":["(function() {\n\t'use strict';\n\n\t{\n\t\t// object pattern matching\n\t\tlet {lName, fName} = {fName: 'John', age: 15, lName: 'Doe'};\n\n\t\t// array pattern matching\n\t\tlet [first, second, third] = [8, 4, 100, -5, 20];\n\n\t\t// output: Doe, John\n\t\tconsole.log(lName + ', '+ fName);\n\n\t\t// output: 100, 4, 8\n\t\tconsole.log(third, second, first);\n\t};\n\n\t{\n\t\tlet config = {delay: 500, title: 'Hi!', info: {name: 'Elijah'}},\n\n\t\t\t// full & shorthand syntax can be mixed\n\t\t\t// `delay` uses shorthand syntax\n\t\t\t{info: {name: one}, delay, empty: three, title: four} = config;\n\n\t\t// output: 'Elijah', 500, undefined, 'Hi!'\n\t\t// missing properties have `undefined` value\n\t\tconsole.log(one, delay, three, four);\n\t};\n\n\t{\n\t\tconst bKey = 'b';\n\n\t\t/*** computed values work too! ***/\n\t\tlet {[bKey]: b, a, c} = {a: 1, b: 2, c: 3};\n\n\t\t// outputs: 1, 2, 3\n\t\tconsole.log(a, b, c);\n\n\n\t\t/*** destructuring works w/o variable declarations ***/\n\t\tb = {};\n\t\t( {a, b: b.count} = {a: 1, b: 2} );\n\n\t\t// output: 1, {count: 2}\n\t\tconsole.log(a, b);\n\t};\n\n\t{\n\t\t// nested array literal pattern syntax\n\t\tlet myArray = [1, ['hello'], true],\n\t\t\t[first, [secondNest], third] = myArray;\n\n\t\t// output: 1, 'hello', true\n\t\tconsole.log(first, secondNest, third);\n\t};\n\n\t{\n\t\t// skipping indices in array literal pattern\n\t\tlet sequence = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34],\n\t\t\t[first, , third, fourth, , , seventh] = sequence\n\t\t;\n\n\t\t// output: 0, 1, 2, 8\n\t\tconsole.log(first, third, fourth, seventh);\n\t};\n\n\t{\n\t\tlet json = {\n\t\t\t\tshapes: ['circle', 'square', 'triangle'],\n\t\t\t\tcolors: 5,\n\t\t\t\tfill: true,\n\t\t\t\tauthor: {\n\t\t\t\t\tfirstName: 'Ben',\n\t\t\t\t\tlastName: 'Ilegbodu',\n\t\t\t\t\tcity: 'Pittsburg'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfill,\n\t\t\t\tauthor: {lastName, firstName, city},\n\t\t\t\tshapes: [, secondShape],\n\t\t\t\tcolors: numColors\n\t\t\t} = json;\n\n\t\t// output: true, square, 5\n\t\tconsole.log(fill, secondShape, numColors);\n\t\t// output: Ilegbodu, Ben, Pittsburg\n\t\tconsole.log(lastName, firstName, city);\n\t};\n\n\t{\n\t\t// using array destructuring to swap 2 variables\n\t\tlet a = 1,\n\t\t\tb = 2;\n\n\t\t[b, a] = [a, b];\n\n\t\t// output: 2, 1\n\t\tconsole.log(a, b);\n\t};\n\n\t{\n\t\t// destructuring class objects\n\t\tlet {\n\t\t\t\tprotocol: scheme, \n\t\t\t\thost: domain, \n\t\t\t\tpathname: path, \n\t\t\t\tsearch: query,\n\t\t\t\thash,\n\t\t\t\thref: url\n\t\t\t} = location;\n\n\t\t// output: true\n\t\tconsole.log(\n\t\t\t(scheme + '//' + domain + path + query + hash) == url\n\t\t);\n\t};\n\n\t{\n\t\t// destructuring return values\n\t\tlet [, areaCode, exchange, lineNumber] =\n\t\t\t/^(\\d\\d\\d)-(\\d\\d\\d)-(\\d\\d\\d\\d)$/\n\t\t\t\t.exec('650-555-1234');\n\n\t\t// output: 650, 555, 1234\n\t\tconsole.log(areaCode, exchange, lineNumber);\n\t};\n\n\t{\n\t\t// function w/ multiple return values & destructuring\n\t\t\n\t\tconst find = function(list, token) {\n\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\tif (list[i].indexOf(token) > -1)\n\t\t\t\t\treturn {index: i, val: list[i]};\n\t\t\t}\n\n\t\t\t// match not found\n\t\t\treturn {index: -1, val: undefined};\n\t\t};\n\t\tlet fruits = ['apple', 'grape', 'peach', 'pear'],\n\t\t\t{index, val} = find(fruits, 'ape');\n\t\tconsole.log(index, val);\n\t};\n}) ();\n"]}