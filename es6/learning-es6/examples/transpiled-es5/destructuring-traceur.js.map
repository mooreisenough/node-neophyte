{"version":3,"sources":["../es6/destructuring.js"],"names":[],"mappings":"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","file":"/Users/benmvp/github/benmvp/learning-es6/examples/transpiled-es5/destructuring-traceur.js","sourcesContent":["(function() {\n\t'use strict';\n\n\t{\n\t\t// object pattern matching\n\t\tlet {lName, fName} = {fName: 'John', age: 15, lName: 'Doe'};\n\n\t\t// array pattern matching\n\t\tlet [first, second, third] = [8, 4, 100, -5, 20];\n\n\t\t// output: Doe, John\n\t\tconsole.log(lName + ', '+ fName);\n\n\t\t// output: 100, 4, 8\n\t\tconsole.log(third, second, first);\n\t};\n\n\t{\n\t\tlet config = {delay: 500, title: 'Hi!', info: {name: 'Elijah'}},\n\n\t\t\t// full & shorthand syntax can be mixed\n\t\t\t// `delay` uses shorthand syntax\n\t\t\t{info: {name: one}, delay, empty: three, title: four} = config;\n\n\t\t// output: 'Elijah', 500, undefined, 'Hi!'\n\t\t// missing properties have `undefined` value\n\t\tconsole.log(one, delay, three, four);\n\t};\n\n\t{\n\t\tconst bKey = 'b';\n\n\t\t/*** computed values work too! ***/\n\t\tlet {[bKey]: b, a, c} = {a: 1, b: 2, c: 3};\n\n\t\t// outputs: 1, 2, 3\n\t\tconsole.log(a, b, c);\n\n\n\t\t/*** destructuring works w/o variable declarations ***/\n\t\tb = {};\n\t\t( {a, b: b.count} = {a: 1, b: 2} );\n\n\t\t// output: 1, {count: 2}\n\t\tconsole.log(a, b);\n\t};\n\n\t{\n\t\t// nested array literal pattern syntax\n\t\tlet myArray = [1, ['hello'], true],\n\t\t\t[first, [secondNest], third] = myArray;\n\n\t\t// output: 1, 'hello', true\n\t\tconsole.log(first, secondNest, third);\n\t};\n\n\t{\n\t\t// skipping indices in array literal pattern\n\t\tlet sequence = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34],\n\t\t\t[first, , third, fourth, , , seventh] = sequence\n\t\t;\n\n\t\t// output: 0, 1, 2, 8\n\t\tconsole.log(first, third, fourth, seventh);\n\t};\n\n\t{\n\t\tlet json = {\n\t\t\t\tshapes: ['circle', 'square', 'triangle'],\n\t\t\t\tcolors: 5,\n\t\t\t\tfill: true,\n\t\t\t\tauthor: {\n\t\t\t\t\tfirstName: 'Ben',\n\t\t\t\t\tlastName: 'Ilegbodu',\n\t\t\t\t\tcity: 'Pittsburg'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfill,\n\t\t\t\tauthor: {lastName, firstName, city},\n\t\t\t\tshapes: [, secondShape],\n\t\t\t\tcolors: numColors\n\t\t\t} = json;\n\n\t\t// output: true, square, 5\n\t\tconsole.log(fill, secondShape, numColors);\n\t\t// output: Ilegbodu, Ben, Pittsburg\n\t\tconsole.log(lastName, firstName, city);\n\t};\n\n\t{\n\t\t// using array destructuring to swap 2 variables\n\t\tlet a = 1,\n\t\t\tb = 2;\n\n\t\t[b, a] = [a, b];\n\n\t\t// output: 2, 1\n\t\tconsole.log(a, b);\n\t};\n\n\t{\n\t\t// destructuring class objects\n\t\tlet {\n\t\t\t\tprotocol: scheme, \n\t\t\t\thost: domain, \n\t\t\t\tpathname: path, \n\t\t\t\tsearch: query,\n\t\t\t\thash,\n\t\t\t\thref: url\n\t\t\t} = location;\n\n\t\t// output: true\n\t\tconsole.log(\n\t\t\t(scheme + '//' + domain + path + query + hash) == url\n\t\t);\n\t};\n\n\t{\n\t\t// destructuring return values\n\t\tlet [, areaCode, exchange, lineNumber] =\n\t\t\t/^(\\d\\d\\d)-(\\d\\d\\d)-(\\d\\d\\d\\d)$/\n\t\t\t\t.exec('650-555-1234');\n\n\t\t// output: 650, 555, 1234\n\t\tconsole.log(areaCode, exchange, lineNumber);\n\t};\n\n\t{\n\t\t// function w/ multiple return values & destructuring\n\t\t\n\t\tconst find = function(list, token) {\n\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\tif (list[i].indexOf(token) > -1)\n\t\t\t\t\treturn {index: i, val: list[i]};\n\t\t\t}\n\n\t\t\t// match not found\n\t\t\treturn {index: -1, val: undefined};\n\t\t};\n\t\tlet fruits = ['apple', 'grape', 'peach', 'pear'],\n\t\t\t{index, val} = find(fruits, 'ape');\n\t\tconsole.log(index, val);\n\t};\n}) ();\n"]}