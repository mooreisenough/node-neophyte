{"version":3,"sources":["../es6/new-collections.js"],"names":[],"mappings":"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","file":"/Users/benmvp/github/benmvp/learning-es6/examples/transpiled-es5/new-collections-traceur.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tclass Player {\n\t\tconstructor(name) {\n\t\t\tthis.name = name;\n\t\t}\n\t}\n\n    { // Map\n\t\tlet steph = new Player('Stephen Curry');\n\t\tlet kobe = new Player('Kobe Bryant');\n\t\tlet lebron = new Player('LeBron James');\n\t\tlet allStarVotes = new Map();\n\n\t\tallStarVotes.set(steph, 50)\n\t\t    .set(kobe, 0)\n\t\t    .set(lebron, 22);\n\n\t\t// make a clone of allstarVotes\n\t\tlet allStarVotesCopy = new Map(allStarVotes);\n\n\t\t// output: 50\n\t\tconsole.log(allStarVotes.get(steph));\n\n\t\t// output: false\n\t\tconsole.log(allStarVotes.has('Kevin Durant'));\n\n\t\tallStarVotes.delete(kobe);\n\n\t\t// output: 2\n\t\tconsole.log(allStarVotes.size);\n\n\t\tallStarVotes.clear();\n\n\t\t// output: 2\n\t\tconsole.log(allStarVotes.size);\n\n\t\t// log each player name since player\n\t\t// is a key in the map\n\t\tfor (let player of allStarVotesCopy.keys()) {\n\t\t    console.log(player.name);\n\t\t}\n\n\t\t// log each all star vote count since\n\t\t// count is a value in the map\n\t\tfor (let count of allStarVotesCopy.values()) {\n\t\t    console.log(count);\n\t\t}\n\n\t\t// log each player name and his votes count\n\t\t// Uses array destructuring to assign [key, value]\n\t\t// pair into separate variables'\n\t\tfor (let [player, count] of allStarVotesCopy.entries()) {\n\t\t    console.log(`${player.name} (${count})`);\n\t\t}\n\n\t\t// log each player name and his votes count\n\t\t// together. Ex: 'Stephen Curry (50)\n\t\t// Uses array destructuring to assign [key, value]\n\t\t// pair into separate variables\n\t\tfor (let [player, count] of allStarVotes) {\n\t\t    console.log(`${player.name} (${count})`);\n\t\t}\n\n\t\t// functional verion of calling `.entries()`\n\t\t// `map` is a reference to `allStarVotes`\n\t\tallStarVotesCopy.forEach((count, player, map) => {\n\t\t    console.log(`${player.name} (${count})`);\n\t\t\tconsole.log(map === allStarVotesCopy);\n\t\t});\n\n\t\tlet durant = new Player('Kevin Durant');\n\t\tlet cp3 = new Player('Chris Paul');\n\t\tlet theBrow = new Player('Anthony Davis');\n\n\t\tlet russell = new Player('Russell Westbrook');\n\t\tlet carmelo = new Player('Carmelo Anthony');\n\n\t\tlet moreAllStarVotes = new Map([\n\t\t    [durant, 20],\n\t\t    [cp3, 5],\n\t\t    [theBrow, 10]\n\t\t]);\n\t\tlet rawData = [\n\t\t    [russell, 12],\n\t\t    [carmelo, 15]\n\t\t];\n\n\t\tlet mergedMap = new Map([...allStarVotesCopy, ...moreAllStarVotes, ...rawData]);\n\n\t\tconsole.log(mergedMap);\n    }\n\n\t{ // WeakMap\n\t\tlet steph = new Player('Stephen Curry');\n\t\tlet kobe = new Player('Kobe Bryant');\n\t\tlet lebron = new Player('LeBron James');\n\t\tlet allStarVotesWeak = new WeakMap();\n\n\t\tallStarVotesWeak.set(steph, 50)\n\t\t    .set(kobe, 0)\n\t\t    .set(lebron, 22);\n\n\t\t// output: 50\n\t\tconsole.log(allStarVotesWeak.get(steph));\n\n\t\t// output: false\n\t\tconsole.log(allStarVotesWeak.has('Kevin Durant'));\n\n\t\tallStarVotesWeak.delete(kobe);\n\n\t\t// set up metadata click map\n\t\tlet clickMap = new WeakMap();\n\n\t\t// on each click, add the div to the map\n\t\t// (with initial click) or increment its\n\t\t// click count\n\t\t$('p').click(function() {\n\t\t    let pNode = this;\n\t\t    let clicks = clickMap.get(pNode);\n\n\t\t    if (!clicks) {\n\t\t        clicks = 0;\n\t\t    }\n\n\t\t    clicks.set(pNode, ++clicks);\n\t\t});\n\t}\n\n\t{ // Set\n\t\tfunction union(setA, setB) {\n\t\t\treturn new Set([...setA, ...setB]);\n\t\t}\n\t\tfunction intersection(setA, setB) {\n\t\t    return new Set([...setA].filter(item => setB.has(item)));\n\t\t}\n\n\t\tfunction difference(setA, setB) {\n\t\t    return new Set([...setA].filter(item => !setB.has(item)));\n\t\t}\n\n\t\tlet steph = new Player('Stephen Curry');\n\t\tlet kobe = new Player('Kobe Bryant');\n\t\tlet lebron = new Player('LeBron James');\n\n\t\tlet allStars = new Set();\n\n\t\tallStars.add(steph)\n\t\t    .add(kobe)\n\t\t    .add(steph) // duplicates are removed\n\t\t    .add(lebron);\n\n\t\t// create a clone by passing set as constructor of another\n\t\tlet allStarsClone = new Set(allStars);\n\n\t\t// output: false\n\t\tconsole.log(allStars.has('Kevin Durant'));\n\n\t\t// output: true\n\t\tconsole.log(allStars.has(kobe));\n\n\t\tallStars.delete(kobe);\n\n\t\t// output: 2\n\t\tconsole.log(allStars.size);\n\n\t\tallStars.clear();\n\n\t\t// output: 2\n\t\tconsole.log(allStars.size);\n\n\t\t// easily iterate over a set using `for-of`\n\t\tfor (let allStar in allStarsClone) {\n\t\t    console.log(allStar.name);\n\t\t}\n\n\t\t// can also iterate using `.forEach()`\n\t\tallStarsClone.forEach((value, key, setRef) => {\n\t\t    console.log(value.name);\n\n\t\t    // In a set the value & key are the same\n\t\t    console.log(value === key);\n\n\t\t    // The third parameter is a reference to the\n\t\t    // instance\n\t\t    console.log(setRef === allStarsClone);\n\t\t});\n\n\t\tlet setUnion = union(\n\t\t    new Set(['a', 'b', 'c', 'd']),\n\t\t    new Set(['d', 'e', 'f', 'g'])\n\t\t);\n\n\t\t// output: 8\n\t\tconsole.log(setUnion.size);\n\n\t\tlet setIntersection = intersection(\n\t\t    new Set(['a', 'b', 'c', 'd']),\n\t\t    new Set(['d', 'e', 'f', 'g'])\n\t\t);\n\n\t\t// output: 1\n\t\tconsole.log(setIntersection.size);\n\n\t\tlet setDifference = difference(\n\t\t    new Set(['a', 'b', 'c', 'd']),\n\t\t    new Set(['d', 'e', 'f', 'g'])\n\t\t);\n\n\t\t// output: 3\n\t\tconsole.log(setDifference.size);\n\t}\n}) ();\n"]}